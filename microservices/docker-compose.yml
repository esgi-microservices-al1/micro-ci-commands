# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)
version: '3'
#Define services
services:
  #Kafka
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    ports:
        - "2181:2181"
  kafka:
    container_name: kafka
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

    #PostgreSQL Database for the application
#  microdb-postgres:
#    image: postgres:9.6-alpine
#    container_name: microdb-postgres
#      #Volume mounted for database for the storage
#    volumes:
#      - microdata:/var/lib/postgresql/data/
#    ports:
#      - 5432:5432 # Forward the exposed port 5432 on the container to port 5432 on the host machine
#    #Environment variable for DB name, user and password
#    environment:
#      - POSTGRES_DB=microservicesdb
#      - POSTGRES_USER=root
#      - POSTGRES_PASSWORD=root1994
#      #Back-end Spring Boot Application
#  microservices-app:
#      #The docker file in microservices build the jar and provides the docker image with the following name.
#    build: ./
#    container_name: microservices-app
#      #Environment variables for Spring Boot Application.
#    environment:
#      - DB_SERVER=microdb-postgres
#      - POSTGRES_DB=microservicesdb
#      - POSTGRES_USER=postgres
#      - POSTGRES_PASSWORD=root1994
#    volumes:
#      - .:/app
#    ports:
#      - 8082:8082 # Forward the exposed port 8080 on the container to port 8080 on the host machine
#    links:
#      - microdb-postgres
#  #Volumes for DB data
#volumes:
#  microdata:
